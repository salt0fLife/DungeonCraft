[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://w7sb30vbm0ag"]

[ext_resource type="Texture2D" uid="uid://duiqoe7ligmcd" path="res://assets/glb/peaceful_island_blocks/portal_frame_portalFrame.png" id="1_72v76"]
[ext_resource type="Texture2D" uid="uid://d04c1ju2slqq1" path="res://assets/glb/peaceful_island_blocks/portal_markings.png" id="2_0lxjk"]

[sub_resource type="Shader" id="Shader_55vuw"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.2.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_nearest_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_nearest_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_nearest_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_nearest_mipmap,repeat_enable;
uniform vec4 emission : source_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;
uniform float symbols_cutoff = 0.0;

uniform float spiral = 0.0;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

vec2 spiral_uv(vec2 uv, vec2 center, float angle) {
	uv -= center;
	angle = angle/length(uv);
	
	mat2 rm = mat2(
		vec2(cos(angle), -sin(angle)),
		vec2(sin(angle), cos(angle))
	);
	
	uv = rm * uv;
	uv += center;
	return uv;
}




void fragment() {
	vec2 base_uv = spiral_uv(UV, vec2(0.5,0.5), spiral);
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	float energy = 0.0;
	if (emission_tex.r > symbols_cutoff){
		energy = 1.0;
	}
	EMISSION = (emission.rgb)*vec3(energy,0.0,0.0)*emission_energy;
}
"

[resource]
resource_name = "portal"
render_priority = 0
shader = SubResource("Shader_55vuw")
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/emission = Color(0.560784, 0.0235294, 0, 1)
shader_parameter/emission_energy = 16.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/symbols_cutoff = 1.0
shader_parameter/spiral = 0.0
shader_parameter/texture_albedo = ExtResource("1_72v76")
shader_parameter/texture_emission = ExtResource("2_0lxjk")
